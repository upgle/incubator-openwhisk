---
# This task will initialize the immortal DBs in the database account.
# This step is usually done only once per deployment.

- include: db/recreateDb.yml
  vars:
    dbName: "{{ db.whisk.auth }}"
    forceRecreation: False

- include: db/recreateDoc.yml
  vars:
    dbName: "{{ db.whisk.auth }}"
    doc: "{{ lookup('file', '{{ item }}') }}"
  with_items:
    - "{{ openwhisk_home }}/ansible/files/auth_index.json"
    - "{{ openwhisk_home }}/ansible/files/filter_design_document.json"

- name: create necessary "auth" keys
  include: db/recreateDoc.yml
  vars:
    key: "{{ lookup('file', 'files/auth.{{ item }}') }}"
    dbName: "{{ db.whisk.auth }}"
    doc: >
      {
        "_id": "{{ item }}",
        "subject": "{{ item }}",
        "namespaces": [{
          "name": "{{ item }}",
          "uuid": "{{ key.split(":")[0] }}",
          "key": "{{ key.split(":")[1] }}"
        }]
      }
  with_items: "{{ db.authkeys }}"


- include: db/recreateDb.yml
  vars:
    dbName: "{{ db.whisk.service.mappings }}"
    forceRecreation: False

- include: db/recreateDoc.yml
  vars:
    dbName: "{{ db.whisk.service.mappings }}"
    doc: "{{ lookup('file', '{{ item }}') }}"
  with_items:
    - "{{ openwhisk_home }}/ansible/files/service_mappings_design_document.json"

- name: create necessary "service mappings"
  include: db/recreateDoc.yml
  vars:
    key: "{{ lookup('file', 'files/auth.{{ item }}') }}"
    dbName: "{{ db.whisk.service.mappings }}"
    doc: >
      {
         "_id": "{{ item }}",
         "service": "{{ db.whisk.service.lambda_id }}",
         "namespace": {
             "id": "{{ item }}",
             "name": "{{ item }}",
             "description": "",
             "attached": true,
             "url": "/lambda/workspace/{{ item }}",
             "uuid": "{{ key.split(":")[0] }}",
             "key": "{{ key.split(":")[1] }}"
         }
      }
  with_items: "{{ db.authkeys }}"
