# Licensed to the Apache Software Foundation (ASF) under one or more contributor
# license agreements; and to You under the Apache License, Version 2.0.
---
# These tasks will setup the cluster for CouchDB

- name: "Set the coordinator(default to the first node)"
  set_fact:
    coordinator: "{{ couchdb_coordinator | default(groups['db'][0]) }}"

- name: create '_users' database for singleton mode
  uri:
    url: "{{ db.protocol }}://{{ ansible_host }}:{{ db.port }}/_users"
    method: PUT
    status_code: 201
    user: "{{ db.credentials.admin.user }}"
    password: "{{ db.credentials.admin.pass }}"
    force_basic_auth: yes
  when: (inventory_hostname == coordinator) and (couchdb.version|version_compare('2.0','>='))

- name: enable the cluster setup mode
  uri:
    url: "{{ db.protocol }}://{{ ansible_host }}:{{ db.port }}/_cluster_setup"
    method: POST
    body: >
        {"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "{{ db.credentials.admin.user }}", "password":"{{ db.credentials.admin.pass }}", "port": {{ db.port }}, "node_count": "{{ groups['db'] | length }}", "remote_node": "{{ ansible_host }}", "remote_current_user": "{{ db.credentials.admin.user }}", "remote_current_password": "{{ db.credentials.admin.pass }}"}
    body_format: json
    status_code: 201
    user: "{{ db.credentials.admin.user }}"
    password: "{{ db.credentials.admin.pass }}"
    force_basic_auth: yes
  when: inventory_hostname == coordinator

- name: add remote nodes to the cluster
  uri:
    url: "{{ db.protocol }}://{{ coordinator }}:{{ db.port }}/_cluster_setup"
    method: POST
    body: >
        {"action": "add_node", "host":"{{ ansible_host }}", "port": {{ db.port }}, "username": "{{ db.credentials.admin.user }}", "password":"{{ db.credentials.admin.pass }}"}
    body_format: json
    status_code: 201
    user: "{{ db.credentials.admin.user }}"
    password: "{{ db.credentials.admin.pass }}"
    force_basic_auth: yes
  when: (inventory_hostname != coordinator) and (db.instances|int >= 2)

- name: finish the cluster setup mode
  uri:
    url: "{{ db.protocol }}://{{ ansible_host }}:{{ db.port }}/_cluster_setup"
    method: POST
    body: >
        {"action": "finish_cluster"}
    body_format: json
    status_code: 201
    user: "{{ db.credentials.admin.user }}"
    password: "{{ db.credentials.admin.pass }}"
    force_basic_auth: yes
  when: inventory_hostname == coordinator
