input {
file {
  path => "/var/log/messages"
  add_field => { "logType" => "docker" }
}
{% if couchdbContainerId.stdout != '' %}
file {
  codec => "json"
  path => "/var/lib/docker/containers/{{ couchdbContainerId.stdout }}/{{ couchdbContainerId.stdout }}-json.log"
  add_field => { "logType" => "couchdb" }
}
{% endif %}
{% if kafkaContainerId.stdout != '' %}
file {
  codec => "json"
  path => "/var/lib/docker/containers/{{ kafkaContainerId.stdout }}/{{ kafkaContainerId.stdout }}-json.log"
  add_field => { "logType" => "kafka" }
}
{% endif %}
{% if zookeeperContainerId.stdout != '' %}
file {
  codec => "json"
  path => "/var/lib/docker/containers/{{ zookeeperContainerId.stdout }}/{{ zookeeperContainerId.stdout }}-json.log"
  add_field => { "logType" => "zookeeper" }
}
{% endif %}
}

filter {
if ([path] =~ "messages" and [message] !~ "dockerd") {
   drop { }
}
if ([path] =~ "messages" ) {
    mutate {
      add_field => {
        "projectName" => "{{ nelo.project_name }}"
        "projectVersion" => "{{ nelo.project_version }}"
        "logSource" => "logFile"
      }
     remove_field => ["path","@timestamp","@version"]
    }
}else{
    json {
      skip_on_invalid_json => false
      source => "text"
    }
    mutate {
      add_field => {
        "projectName" => "{{ nelo.project_name }}"
        "projectVersion" => "{{ nelo.project_version }}"
        "body" => "%{log}"
        "logSource" => "%{stream}"
        "logTime" => "%{time}"
      }
      remove_field => ["message","@timestamp","type","path","@version","time","stream","log"]
    }
}
}

output {
http {
    http_method => "post"
    url => "{{ nelo.serverUrl }}"
    format => "json"
    automatic_retries => 2
}
}
